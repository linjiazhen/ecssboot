/**
 * Created by jason on 2015/2/4.
 */
ecss.model=(function(){
    var home={
            loginout:{
                data:{},
                url:{
                    createpic:'createpic.do',
                    login:'login.do',
                    logout:'logout.do',
                    checklogin:'checklogin.do',
                    recordsnum:'recordsnum.do',
                    getusermenus:'getusermenus.do'
                }
            },
            map:{
                data:{},
                url:{
                    addbuildpoint:'addbuildpoint.do',
                    addorganpoint:'addorganpoint.do',
                    addwaterpoint:'addwaterpoint.do',
                    deletebuildpoint:'deletebuildpoint.do',
                    deleteorganpoint:'deleteorganpoint.do',
                    deletewaterpoint:'deletewaterpoint.do',
                    getallpoints:'getallpoints.do',
                    getpoints:'getpoints.do',
                    getallorganpoints:'getallorganpoints.do',
                    getorganpoints:'getorganpoints.do',
                    getwaterpoints:'getwaterpoints.do',
                    getbuild:'getbuild.do',
                    getorgan:'getorganbyid.do',
                    getwaterinfo:'getwaterinfo.do',
                    getdayenergy:'getdayenergy.do',
                    getmonthenergy:'getmonthenergy.do',
                    getorganmonthenergy:'getorganmonthenergy.do',
                    getwatermonthenergy:'getwatermonthenergy.do',
                    getyearenergy:'getyearenergy.do',
                    getallenergy:'getallenergy.do',
                    getenergys:'getenergys.do'//input:buildid,func; func is in {dayammeter,daywater ....} output:{energy:{name:energytype's name,data:[energy's value],type:line},categories:[times]}
                }
            }
        },
        user={
            user:{
                data:{},
                url:{
                    add:'adduser.do',
                    del:'deleteuser.do',
                    update:'updateuser.do',
                    get:'getuser.do'
                }
            },
            role:{
                data:{},
                url:{
                    add:'addrole.do',
                    del:'deleterole.do',
                    update:'updaterole.do',
                    getroles:'getroles.do',
                    getright:'getright.do',
                    updateright:'updateright.do'
                }
            },
            menu:{
                data:{},
                url:{
                    add:'addmenu.do',
                    del:'deletemenu.do',
                    update:'updatemenu.do',
                    getmenusbylevel:'getmenusbylevel.do'
                }
            },
            log:{
                data:{},
                url:{
                    add:'addlog.do',
                    del:'deletelog.do'
                }
            }
        },
        build={
            group: {
                data:{},
                url:{
                    add:'addgroup.do',
                    del:'deletegroup.do',
                    update:'updategroup.do'
                }
            },
            buildtype:  {
                data:{},
                url:{
                    add:'addbuildtype.do',
                    del:'deletebuildtype.do',
                    update:'updatebuildtype.do'
                }
            },
            roomtype:  {
                data:{},
                url:{
                    add:'addroomtype.do',
                    del:'deleteroomtype.do',
                    update:'updateroomtype.do'
                }
            },
            build:{
                data:{},
                url:{
                    add:'addbuild.do',
                    del:'deletebuild.do',
                    update:'updatebuild.do',
                    getallgroups:'getallgroups.do',
                    getallbuildtypes:'getallbuildtypes.do',
                    addfloor:'addfloor.do',
                    getfloors:'getfloors.do',
                    getfloor:'getfloor.do',
                    deletefloor:'deletefloor.do',
                    updatefloor:'updatefloor.do'
                }
            },
            room:{
                data:{},
                url:{
                    getallroomtypes:'getallroomtypes.do',
                    getroom:'getroom.do',
                    getrooms:'getrooms.do',
                    addrooms:'addroom.do',
                    updateroom:'updateroom.do',
                    deleterooms:'deleterooms.do'
                }
            }
        },
        organ={
            organtype: {
                data:{},
                url:{
                    add:'addorgantype.do',
                    del:'deleteorgantype.do',
                    update:'updateorgantype.do'
                }
            },
            organ: {
                data:{},
                url:{
                    add:'addorgan.do',
                    del:'deleteorgan.do',
                    update:'updateorgan.do',
                    getallorgantypes:'getallorgantypes.do',
                    getorganbyid:'getorganbyid.do',
                    getbuildbyorgan:'getbuildbyorgan.do',
                    updateconnect:'updateorganbuild.do'
                }
            }
        },
        equip={
            equiptype: {
                data:{},
                url:{
                    add:'addequiptype.do',
                    del:'deleteequiptype.do',
                    update:'updateequiptype.do'
                }},
            batch:{
                data:{},
                url:{
                    getpara:'gettypeparameter.do',
                    add:'addequipbatch.do',
                    del:'deleteequipbatch.do',
                    update:'updateequipbatch.do'
                }
            },
            list:{
                data:{},
                url:{
                    getlistbytype:'getequiplistbytypeid.do',
                    getlist:'getequiplistbybatchid.do',
                    getmeasure:'getallmeasures.do',
                    install:'installequip.do',
                    delinstall:'deleteequipinstall.do',
                    addmeasure:'addmeasure.do',
                    updatemeasure:'updatemeasure.do',
                    delmeasure:'deletemeasure.do'
                }
            }
        },
        energy={
            energytype: {
                data:{},
                url:{
                    add:'addenergytype.do',
                    del:'deleteenergytype.do',
                    update:'updateenergytype.do',
                    onoff:'updateenergytypestate.do',
                    getparent:'getparentinfo.do'
                }
            },
            energy:{
                data:{},
                url:{
                    getenergy:'getenergy.do',//input:{model:build|organ,modellevel:group|build|floor|room,modelid:model's uuid,energytypeid:energytype's uuid,energytype:energytype's name,startdate:xxxx/xx/xx,enddate:xxxx/xx/xx,basetime:minutes|hour|day|month|year,caltype:total|people|area,showtype:value|yony|chain}
                    //output:{energy:{name:energytype's name,data:[energy's value]},categories:[times]}
                    getwatermonthenergy:'getwatermonthenergy.do',
                    getwaterenergymap:'getwaterenergymap.do',
                    getwaterenergy:'getenergy.do',
                    gettypeenergy:'gettypeenergy.do',
                    getfuncenergy:'getfuncenergy.do'
                }
            }
        },
        audit={
            audit:  {
                data:{},
                url:{
                    getreports:'getreports.do',
                    add:'addreport.do',
                    del:'deletereport.do',
                    update:'updatereport.do',
                    filedownload:'fileDownload.do'
                }
            }
        },
        alert={
            equipstate:{
                data:{},
                url:{
                    getequipstate:'getequipstate.do',
                    getequipalerts:'getequipalerts.do'
                }
            },
            rule:{
                data:{},
                url:{
                    savealertconf:'savealertconf.do',
                    getalertconf:'getalertconf.do',
                    savealertequip:'savealertequip.do',
                    getalertequip:'getalertequip.do',
                    setruleonoff:'setruleonoff.do',
                    add:'addrule.do',
                    update:'updaterule.do',
                    del:'deleterule.do'
                }
            },
            alert:{
                data:{},
                url:{
                    getallalerts:'getallalerts.do',
                    sendalert:'sendalert.do',
                    deletealert:'deletealert.do',
                    deleteequipalert:'deleteequipalert.do',
                    deletebaoguan:'deletebaoguan.do'
                }
            },
            exchandler:{
                data:{},
                url:{
                    getamsublist:'getamsublist.do',
                    setwhitelist:'setwhitelist.do',
                    getwhitelist:'getwhitelist.do',
                    deletewhitelist:'deletewhitelist.do',
                    getamlist:'getamlist.do',
                    getwaterlist:'getwaterlist.do'
                }
            }
        },
        maintenance={
            gateway:{
                data:{},
                url:{
                    setuse:'setgatewayuse.do',
                    control:'gatewaycontrol.do',
                    update:'updategateway.do'
                }
            },
            ammeter:{
                data:{},
                url:{
                    setuse:'setammeteruse.do',
                    setonoff:'set_on_off.do',
                    refresh:'refresh_para.do',
                    update:'updateammeter.do',
                    getreal:'getammeterdata.do',
                    getenergy:'getenergystate.do',
                    getpara:'getenergyparameter.do',
                    inputamdata:'inputamdata.do',
                    setlastactive:'setlastactive.do',
                    getamerrorvalues:'getamerrorvalues.do'
                }
            },
            watermeter:{
                data:{},
                url:{
                    setuse:'setwatermeteruse.do',
                    setonoff:'set_on_off.do',
                    refresh:'refresh_para.do',
                    update:'updatewatermeter.do',
                    getreal:'getwatermeterdata.do',
                    getenergy:'getenergystate.do',
                    getpara:'getenergyparameter.do',
                    inputwaterdata:'inputwaterdata.do',
                    setlastwateractive:'setlastwateractive.do',
                    getwatererrorvalues:'getwatererrorvalues.do'
                }
            },
            pickupload:{
                url:{
                    pickup:'pickup.do',
                    upload:'upload.do',
                    del:'deletepickuploads.do'
                }
            }
        },
        waterleak={
            waternet:{
                data:{},
                url:{
                    add:'addwaternet.do',
                    del:'deletewaternet.do',
                    update:'updatewaternet.do',
                    getpro:'getproduce.do',
                    addpro:'addproduce.do',
                    delpro:'deleteproduce.do',
                    addcon:'addconsume.do',
                    delcon:'deleteconsume.do',
                    getcon:'getconsume.do',
                    getleak:'getleak.do',
                    getprorank:'getproducerank.do',
                    getconrank:'getconsumerank.do'
                }
            }
        },
        control={
            controlair:{
                url:{
                    getktxt:'getktxt.do'
                }
            }
        },
        public={
            setpublic:{
                url:{
                    setpublic:'setpublic.do',
                    gettime:'gettime.do',
                    getenergytypes:'getpublicenergy.do',
                    getbuilds:'getpublicbuild.do',
                    getorgans:'getpublicorgan.do'
                }
            },
            public:{
                url:{
                    pubilc:'public.do'
                }
            }
        },
        tools={
            option:{
                data:{},
                url:{
                    getnetnames:'getnetnames.do',
                    getuser:'getusers.do',
                    getequiptype:'getallequiptype.do',
                    getequipsubtype:'getequipsubtype.do',
                    getgateway:'getgatewaynames.do',
                    getgatewayinwater:'getgatewayinwater.do',
                    getequipbygateway:'getequipbygateway.do',
                    getgroup:'getgroupnames.do',
                    getbuild:'getbuildnames.do',
                    getfloor:'getfloornames.do',
                    getroom:'getroomnames.do',
                    getorgantypes:'getorgantypes.do',
                    getorgansbytype:'getorgansbytype.do',
                    getorgan:'getorganbypid.do',
                    getenergyitems:'getenergyitems.do',
                    getsupermeter:'getsuperior_meter.do',
                    sendemail:'sendemail.do',
                    sendmessages:'http://www.smswst.com/api/WebServiceAPI.asmx?op=GetAPI',
                    sendmessage:'http://www.smswst.com/api/httpapi.aspx'
                }
            }
        };
    return{
        home:home,
        user:user,
        build:build,
        organ:organ,
        equip:equip,
        energy:energy,
        maintenance:maintenance,
        audit:audit,
        alert:alert,
        waterleak:waterleak,
        public:public,
        control:control,
        tools:tools
    }
}());